{
    "source": 2,
    "revision": 1,
    "description": null,
    "createdOn": "2023-02-12T22:51:53.830Z",
    "variables": {
        "azureml.serviceConnection": {
            "value": null
        },
        "azureml.azureSecret": {
            "value": null,
            "isSecret": true
        },
        "azureml.resourceGroup": {
            "value": null
        },
        "azureml.servicePrincipalId": {
            "value": null
        },
        "azureml.subscriptionId": {
            "value": null,
            "isSecret": true
        },
        "azureml.tenantId": {
            "value": null
        },
        "azureml.workspaceName": {
            "value": null
        },
        "pipeline.artifact": {
            "value": null
        },
        "service.model_1": {
            "value": "svm"
        },
        "service.model_2": {
            "value": "xgboost"
        },
        "service.model_3": {
            "value": "rf"
        },
        "service.name.production": {
            "value": "keystrokes-service-prod"
        },
        "service.name.staging": {
            "value": "keystrokes-service-staging"
        }
    },
    "variableGroups": [],
    "environments": [
        {
            "id": 1,
            "name": "Deploy to Staging",
            "rank": 1,
            "owner": {
                "displayName": "Philip Haddad",
                "url": "https://spsprodweu5.vssps.visualstudio.com/Aeb3fd506-627c-4900-af3b-29c84ce9af6f/_apis/Identities/a63eff04-f3ca-686e-a7d3-a9111ef3cbec",
                "_links": {
                    "avatar": {
                        "href": "https://dev.azure.com/cjttto/_apis/GraphProfile/MemberAvatars/aad.YTYzZWZmMDQtZjNjYS03ODZlLWE3ZDMtYTkxMTFlZjNjYmVj"
                    }
                },
                "id": "a63eff04-f3ca-686e-a7d3-a9111ef3cbec",
                "uniqueName": "cjttto@INF.ELTE.HU",
                "imageUrl": "https://dev.azure.com/cjttto/_apis/GraphProfile/MemberAvatars/aad.YTYzZWZmMDQtZjNjYS03ODZlLWE3ZDMtYTkxMTFlZjNjYmVj",
                "descriptor": "aad.YTYzZWZmMDQtZjNjYS03ODZlLWE3ZDMtYTkxMTFlZjNjYmVj"
            },
            "variables": {},
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 1
                    }
                ],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 1
                }
            },
            "deployStep": {
                "id": 2
            },
            "postDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 3
                    }
                ],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 2
                }
            },
            "deployPhases": [
                {
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": 0
                        },
                        "agentSpecification": {
                            "identifier": "ubuntu-latest"
                        },
                        "skipArtifactsDownload": false,
                        "artifactsDownloadInput": {
                            "downloadInputs": []
                        },
                        "queueId": 9,
                        "demands": [],
                        "enableAccessToken": false,
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 1,
                    "phaseType": 1,
                    "name": "Agent job",
                    "refName": null,
                    "workflowTasks": [
                        {
                            "environment": {},
                            "taskId": "33c63b11-352b-45a2-ba1b-54cb568a29ca",
                            "version": "0.*",
                            "name": "Use Python 3.10",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "versionSpec": "3.10",
                                "disableDownloadFromRegistry": "false",
                                "allowUnstable": "false",
                                "githubToken": "",
                                "addToPath": "true",
                                "architecture": "x64"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
                            "version": "3.*",
                            "name": "Install requirements",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "targetType": "filePath",
                                "filePath": "$(System.DefaultWorkingDirectory)/$(pipeline.artifact)/Landing/package_requirement/install_requirements.sh",
                                "arguments": "",
                                "script": "# Write your commands here\n\necho 'Hello Threat Fabric!'\n",
                                "workingDirectory": "$(System.DefaultWorkingDirectory)/$(pipeline.artifact)/Landing/package_requirement",
                                "failOnStderr": "false",
                                "bashEnvValue": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "6392f95f-7e76-4a18-b3c7-7f078d2f7700",
                            "version": "0.*",
                            "name": "Deploy to Staging",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "scriptSource": "filePath",
                                "scriptPath": "$(System.DefaultWorkingDirectory)/$(pipeline.artifact)/Landing/deployment/deploy_models.py",
                                "script": "",
                                "arguments": "--rg_name  $(azureml.resourceGroup) --ws_name $(azureml.workspaceName) --subscription_id $(azureml.subscriptionId) --tenant_id $(azureml.tenantId) --service_principal_id $(azureml.servicePrincipalId) --azure_secret $(azureml.azureSecret) --service_name $(service.name.staging) --model_1 $(service.model_1) --model_2 $(service.model_2) --model_3 $(service.model_3)",
                                "pythonInterpreter": "",
                                "workingDirectory": "$(System.DefaultWorkingDirectory)/$(pipeline.artifact)/Landing/deployment",
                                "failOnStderr": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                            "version": "2.*",
                            "name": "Add ML Extenstion",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectedServiceNameARM": "$(azureml.serviceConnection)",
                                "scriptType": "bash",
                                "scriptLocation": "inlineScript",
                                "scriptPath": "",
                                "inlineScript": "az extension add -n azure-cli-ml",
                                "scriptArguments": "",
                                "powerShellErrorActionPreference": "stop",
                                "addSpnToEnvironment": "false",
                                "useGlobalConfig": "false",
                                "cwd": "",
                                "failOnStandardError": "false",
                                "powerShellIgnoreLASTEXITCODE": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                            "version": "2.*",
                            "name": "Staging Test",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectedServiceNameARM": "$(azureml.serviceConnection)",
                                "scriptType": "bash",
                                "scriptLocation": "inlineScript",
                                "scriptPath": "",
                                "inlineScript": "pytest endpoint_test.py --doctest-modules --junitxml=junit/staging-test-result.xml --cov-report=xml --cov-report=html --scoreurl $(az ml service show -g $(azureml.resourceGroup) -w $(azureml.workspaceName) -n $(service.name.staging) --query scoringUri -o tsv)",
                                "scriptArguments": "",
                                "powerShellErrorActionPreference": "stop",
                                "addSpnToEnvironment": "false",
                                "useGlobalConfig": "false",
                                "cwd": "$(System.DefaultWorkingDirectory)/$(pipeline.artifact)/Landing/tests/integration",
                                "failOnStandardError": "false",
                                "powerShellIgnoreLASTEXITCODE": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "0b0f01ed-7dde-43ff-9cbb-e48954daf9b1",
                            "version": "2.*",
                            "name": "Publish staging test results",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "testRunner": "JUnit",
                                "testResultsFiles": "**/staging-test-*.xml",
                                "searchFolder": "$(System.DefaultWorkingDirectory)",
                                "mergeTestResults": "false",
                                "failTaskOnFailedTests": "false",
                                "testRunTitle": "",
                                "platform": "",
                                "configuration": "",
                                "publishRunAttachments": "true"
                            }
                        }
                    ]
                }
            ],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true,
                "badgeEnabled": false,
                "autoLinkWorkItems": false,
                "pullRequestDeploymentEnabled": false
            },
            "demands": [],
            "conditions": [
                {
                    "name": "ReleaseStarted",
                    "conditionType": 1,
                    "value": ""
                }
            ],
            "executionPolicy": {
                "concurrencyCount": 1,
                "queueDepthCount": 0
            },
            "schedules": [],
            "currentRelease": {
                "id": 38,
                "url": "https://vsrm.dev.azure.com/cjttto/6bd4be27-4677-46f2-9525-ecb9be731c54/_apis/Release/releases/38",
                "_links": {}
            },
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {},
            "properties": {
                "BoardsEnvironmentType": {
                    "$type": "System.String",
                    "$value": "unmapped"
                },
                "LinkBoardsWorkItems": {
                    "$type": "System.String",
                    "$value": "False"
                }
            },
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "environmentTriggers": [],
            "badgeUrl": "https://vsrm.dev.azure.com/cjttto/_apis/public/Release/badge/6bd4be27-4677-46f2-9525-ecb9be731c54/1/1"
        },
        {
            "id": 2,
            "name": "Deploy to Prod",
            "rank": 2,
            "owner": {
                "displayName": "Philip Haddad",
                "url": "https://spsprodweu5.vssps.visualstudio.com/Aeb3fd506-627c-4900-af3b-29c84ce9af6f/_apis/Identities/a63eff04-f3ca-686e-a7d3-a9111ef3cbec",
                "_links": {
                    "avatar": {
                        "href": "https://dev.azure.com/cjttto/_apis/GraphProfile/MemberAvatars/aad.YTYzZWZmMDQtZjNjYS03ODZlLWE3ZDMtYTkxMTFlZjNjYmVj"
                    }
                },
                "id": "a63eff04-f3ca-686e-a7d3-a9111ef3cbec",
                "uniqueName": "cjttto@INF.ELTE.HU",
                "imageUrl": "https://dev.azure.com/cjttto/_apis/GraphProfile/MemberAvatars/aad.YTYzZWZmMDQtZjNjYS03ODZlLWE3ZDMtYTkxMTFlZjNjYmVj",
                "descriptor": "aad.YTYzZWZmMDQtZjNjYS03ODZlLWE3ZDMtYTkxMTFlZjNjYmVj"
            },
            "variables": {},
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 4
                    }
                ],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 1
                }
            },
            "deployStep": {
                "id": 5
            },
            "postDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 6
                    }
                ],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 2
                }
            },
            "deployPhases": [
                {
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": 0
                        },
                        "agentSpecification": {
                            "identifier": "ubuntu-latest"
                        },
                        "skipArtifactsDownload": false,
                        "artifactsDownloadInput": {
                            "downloadInputs": []
                        },
                        "queueId": 9,
                        "demands": [],
                        "enableAccessToken": false,
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 1,
                    "phaseType": 1,
                    "name": "Agent job",
                    "refName": null,
                    "workflowTasks": [
                        {
                            "environment": {},
                            "taskId": "33c63b11-352b-45a2-ba1b-54cb568a29ca",
                            "version": "0.*",
                            "name": "Use Python 3.10",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "versionSpec": "3.10",
                                "disableDownloadFromRegistry": "false",
                                "allowUnstable": "false",
                                "githubToken": "",
                                "addToPath": "true",
                                "architecture": "x64"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
                            "version": "3.*",
                            "name": "Install requirements",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "targetType": "filePath",
                                "filePath": "$(System.DefaultWorkingDirectory)/$(pipeline.artifact)/Landing/package_requirement/install_requirements.sh",
                                "arguments": "",
                                "script": "# Write your commands here\n\necho 'Hello Threat Fabric!'\n",
                                "workingDirectory": "$(System.DefaultWorkingDirectory)/$(pipeline.artifact)/Landing/package_requirement",
                                "failOnStderr": "false",
                                "bashEnvValue": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "6392f95f-7e76-4a18-b3c7-7f078d2f7700",
                            "version": "0.*",
                            "name": "Deploy to Prod",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "scriptSource": "filePath",
                                "scriptPath": "$(System.DefaultWorkingDirectory)/$(pipeline.artifact)/Landing/deployment/deploy_models.py",
                                "script": "",
                                "arguments": "--rg_name  $(azureml.resourceGroup) --ws_name $(azureml.workspaceName) --subscription_id $(azureml.subscriptionId) --tenant_id $(azureml.tenantId) --service_principal_id $(azureml.servicePrincipalId) --azure_secret $(azureml.azureSecret) --service_name $(service.name.production) --model_1 $(service.model_1) --model_2 $(service.model_2) --model_3 $(service.model_3)",
                                "pythonInterpreter": "",
                                "workingDirectory": "$(System.DefaultWorkingDirectory)/$(pipeline.artifact)/Landing/deployment",
                                "failOnStderr": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                            "version": "2.*",
                            "name": "Add ML Extenstion",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectedServiceNameARM": "$(azureml.serviceConnection)",
                                "scriptType": "bash",
                                "scriptLocation": "inlineScript",
                                "scriptPath": "",
                                "inlineScript": "az extension add -n azure-cli-ml",
                                "scriptArguments": "",
                                "powerShellErrorActionPreference": "stop",
                                "addSpnToEnvironment": "false",
                                "useGlobalConfig": "false",
                                "cwd": "",
                                "failOnStandardError": "false",
                                "powerShellIgnoreLASTEXITCODE": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                            "version": "2.*",
                            "name": "Prod Test",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectedServiceNameARM": "$(azureml.serviceConnection)",
                                "scriptType": "bash",
                                "scriptLocation": "inlineScript",
                                "scriptPath": "",
                                "inlineScript": "pytest endpoint_test.py --doctest-modules --junitxml=junit/prod-test-result.xml --cov-report=xml --cov-report=html --scoreurl $(az ml service show -g $(azureml.resourceGroup) -w $(azureml.workspaceName) -n $(service.name.production) --query scoringUri -o tsv)",
                                "scriptArguments": "",
                                "powerShellErrorActionPreference": "stop",
                                "addSpnToEnvironment": "false",
                                "useGlobalConfig": "false",
                                "cwd": "$(System.DefaultWorkingDirectory)/$(pipeline.artifact)/Landing/tests/integration",
                                "failOnStandardError": "false",
                                "powerShellIgnoreLASTEXITCODE": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "0b0f01ed-7dde-43ff-9cbb-e48954daf9b1",
                            "version": "2.*",
                            "name": "Publish prod test results",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "retryCountOnTaskFailure": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "testRunner": "JUnit",
                                "testResultsFiles": "**/prod-test-*.xml",
                                "searchFolder": "$(System.DefaultWorkingDirectory)",
                                "mergeTestResults": "false",
                                "failTaskOnFailedTests": "false",
                                "testRunTitle": "",
                                "platform": "",
                                "configuration": "",
                                "publishRunAttachments": "true"
                            }
                        }
                    ]
                }
            ],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true,
                "badgeEnabled": false,
                "autoLinkWorkItems": false,
                "pullRequestDeploymentEnabled": false
            },
            "demands": [],
            "conditions": [
                {
                    "name": "Deploy to Staging",
                    "conditionType": 2,
                    "value": "4"
                }
            ],
            "executionPolicy": {
                "concurrencyCount": 1,
                "queueDepthCount": 0
            },
            "schedules": [],
            "currentRelease": {
                "id": 36,
                "url": "https://vsrm.dev.azure.com/cjttto/6bd4be27-4677-46f2-9525-ecb9be731c54/_apis/Release/releases/36",
                "_links": {}
            },
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {},
            "properties": {
                "BoardsEnvironmentType": {
                    "$type": "System.String",
                    "$value": "unmapped"
                },
                "LinkBoardsWorkItems": {
                    "$type": "System.String",
                    "$value": "False"
                }
            },
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "environmentTriggers": [],
            "badgeUrl": "https://vsrm.dev.azure.com/cjttto/_apis/public/Release/badge/6bd4be27-4677-46f2-9525-ecb9be731c54/1/2"
        }
    ],
    "artifacts": [],
    "triggers": [],
    "releaseNameFormat": "Release-$(rev:r)",
    "tags": [],
    "properties": {
        "DefinitionCreationSource": {
            "$type": "System.String",
            "$value": "ReleaseNew"
        },
        "IntegrateBoardsWorkItems": {
            "$type": "System.String",
            "$value": "False"
        },
        "IntegrateJiraWorkItems": {
            "$type": "System.String",
            "$value": "false"
        }
    },
    "id": 1,
    "name": "Release-CD",
    "path": "\\",
    "projectReference": null,
    "url": "https://vsrm.dev.azure.com/cjttto/6bd4be27-4677-46f2-9525-ecb9be731c54/_apis/Release/definitions/1",
    "_links": {
        "self": {
            "href": "https://vsrm.dev.azure.com/cjttto/6bd4be27-4677-46f2-9525-ecb9be731c54/_apis/Release/definitions/1"
        },
        "web": {
            "href": "https://dev.azure.com/cjttto/6bd4be27-4677-46f2-9525-ecb9be731c54/_release?definitionId=1"
        }
    }
}